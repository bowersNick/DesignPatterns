Wrapper class that encapsulates a subsystem in order to hide the subsystem's complexity.

The facade design pattern:
* Is a means to hide the complexity of a subsystem by encapsulating it behind a unifying wrapper called a facade class.
* Removes the need for client classes to manage a subsystem on their own, resulting in less coupling between the
    subsystem and the client classes.
* Handles instantiation and redirection of tasks to the appropriate class within the subsystem.
* Provides the client classes with a simplified interface for the subsystem.
* Acts simply as a point of entry to a subsystem and does not add more functionality to the subsystem.